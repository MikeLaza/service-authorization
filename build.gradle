plugins {
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'org.springframework.boot' version '2.2.1.RELEASE'
    id 'java'
    id "org.owasp.dependencycheck" version "5.2.1"
    id "com.github.spotbugs" version "2.0.1"
}

description = 'EPAM Report portal. SSO Authorization Service'

sourceCompatibility = 11
targetCompatibility = 11

project.ext {
    releaseMode = project.hasProperty("releaseMode")
    isDebugMode = System.getProperty("DEBUG", "false") == "true"
}

apply from: 'project-properties.gradle'
apply from: 'release.gradle'
apply from: 'https://raw.githubusercontent.com/reportportal/gradle-scripts/master/build-docker.gradle'
apply from: 'https://raw.githubusercontent.com/reportportal/gradle-scripts/master/build-info.gradle'
apply from: 'https://raw.githubusercontent.com/reportportal/gradle-scripts/master/build-commons.gradle'
apply from: 'https://raw.githubusercontent.com/reportportal/gradle-scripts/v5.1/build-quality.gradle'

repositories {
    mavenCentral()
    maven { url "http://dl.bintray.com/epam/reportportal" }
    maven { url 'https://repo.spring.io/libs-milestone' }
    if (!releaseMode) {
        maven { url 'https://jitpack.io' }
    }
}

dependencyManagement {
    imports {
        if (releaseMode) {
            mavenBom "com.epam.reportportal:commons-bom:5.0.0-RC-5"
        } else {
            mavenBom "com.github.reportportal:commons-bom:4b7ed8a"
        }
    }
}

dependencies {
    if (releaseMode) {
        compile 'com.epam.reportportal:commons-dao'
        compile 'com.epam.reportportal:commons-rules'
        compile 'com.epam.reportportal:commons-model'
    } else {
        compile 'com.github.reportportal:commons-dao:94b0779'
        compile 'com.github.reportportal:commons-rules:3c46d7c'
        compile 'com.github.reportportal:commons-model:9213a59'
    }

    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-security'

    compile 'org.springframework.security:spring-security-oauth2-client'
    compile 'org.springframework.security.oauth:spring-security-oauth2:2.4.0.RELEASE'
    compile 'org.springframework.security:spring-security-jwt:1.0.11.RELEASE'
    compile 'org.springframework.security:spring-security-ldap'
    compile 'org.springframework.security.extensions:spring-security-saml2-core:2.0.0.M26'

    compile 'org.apache.tika:tika-core'
    compile 'org.apache.tika:tika-parsers'

    compile 'javax.inject:javax.inject:1'

    compile('io.springfox:springfox-swagger2')
}

wrapper {
    gradleVersion = '6.0'
}

processResources {
    filesMatching('application.properties') {
        expand(project.properties)
    }
}

bootJar {
    releaseMode ? archiveClassifier.set('exec') : getArchiveFileName().set("${getArchiveBaseName().get()}.${getArchiveExtension().get()}")
}
jar.enabled(true)

processResources.dependsOn gitInfo
bootJar.dependsOn gitInfo
prepareDockerfile.dependsOn build
buildDocker.dependsOn prepareDockerfile
addDockerfileToGit.dependsOn releaseDockerfile
updateVersion.dependsOn removeDockerfileFromGit
beforeReleaseBuild.dependsOn addDockerfileToGit
afterReleaseBuild.dependsOn bintrayUpload

